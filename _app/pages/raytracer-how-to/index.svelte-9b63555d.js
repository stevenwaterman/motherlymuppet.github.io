import{S as n,i as c,s as i,q as l,r as f,m as p,k as m,w as u,e as h,c as _,f as $}from"../../chunks/vendor-b123dbec.js";import{B as g}from"../../chunks/BlogPost-fb5b6ef4.js";import"../../chunks/Template-7e2d3e9c.js";function d(s){let t;return{c(){t=h("p"),t.innerHTML=`This part of the series of the BBC Micro:Bit was written especially for the Scott Logic blog.
    Therefore, you&#39;ll have to <a href="https://blog.scottlogic.com/2020/03/10/raytracer-how-to.html">read it over there</a> instead!`},m(o,e){_(o,t,e)},d(o){o&&$(t)}}}function w(s){let t,o;return t=new g({props:{id:"raytracer-how-to",$$slots:{default:[d]},$$scope:{ctx:s}}}),{c(){l(t.$$.fragment)},m(e,r){f(t,e,r),o=!0},p(e,[r]){const a={};r&1&&(a.$$scope={dirty:r,ctx:e}),t.$set(a)},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){u(t,e)}}}class v extends n{constructor(t){super();c(this,t,null,w,i,{})}}export{v as default};
